services:
  mariadb:
    build:
      context: ./requirements/MariaDB
      dockerfile: Dockerfile
    container_name: mariadb
    networks:
      - default
    volumes:
      - ~/data/db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 60s
      retries: 50
    env_file:
      - .env
    restart: always

  wordpress:
    build:
      context: ./requirements/Wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    volumes:
      - ~/data/wp:/var/www/html
    networks:
      - default
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 90s
    restart: always

  nginx:
    build:
      context: ./requirements/Nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "443:443"
    networks:
      - default
    depends_on:
      wordpress:
        condition: service_healthy
      static:
        condition: service_started
    volumes:
      - ~/data/wp:/var/www/html
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "nginx", "status"]
      interval: 5s
      timeout: 60s
      retries: 50
    restart: always
  
  redis:
    build:
      context: ./requirements/Bonus/Redis
      dockerfile: Dockerfile
    container_name: redis
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 60s
      retries: 500
    restart: always

  adminer:
    build:
      context: ./requirements/Bonus/Adminer
      dockerfile: Dockerfile
    container_name: adminer
    networks:
      - default
    volumes:
      - ~/data/wp:/var/www/html
    restart: always

  static:
    build:
      context: ./requirements/Bonus/Static
      dockerfile: Dockerfile
    container_name: static
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 60s
      retries: 5
    restart: always

  netdata:
    build:
      context: ./requirements/Bonus/NetData
      dockerfile: Dockerfile
    container_name: netdata
    networks:
      - default
    volumes:
      - ~/data/wp:/var/lib/netdata/vol1
      - ~/data/db:/var/lib/netdata/vol2
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - wordpress
    restart: always

  ftp:
    build:
      context: ./requirements/Bonus/Ftp
      dockerfile: Dockerfile
    container_name: ftp
    ports:
      - "21:21"
      - "1998-2002:1998-2002"
    volumes:
      - ~/data/wp:/var/www/html
    networks:
      - default
    depends_on:
      wordpress:
        condition: service_healthy
    env_file:
      - .env
    restart: always

networks:
  default:
    driver: bridge