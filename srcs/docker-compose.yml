services:
  mariadb:
    build:
      context: ./requirements/MariaDB
      dockerfile: Dockerfile
    container_name: mariadb
    networks:
      - default
    volumes:
      - ~/data/db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 60s
      retries: 5
    env_file:
      - .env

  wordpress:
    build:
      context: ./requirements/Wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    volumes:
      - ~/data/wp:/var/www/html
    networks:
      - default
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s

  nginx:
    build:
      context: ./requirements/Nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "443:443"
    networks:
      - default
    depends_on:
      wordpress:
        condition: service_healthy
    volumes:
      - ~/data/wp:/var/www/html
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "nginx", "status"]
      interval: 5s
      timeout: 60s
      retries: 5
    
  redis:
    build:
      context: ./requirements/Bonus/Redis
      dockerfile: Dockerfile
    container_name: redis
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 60s
      retries: 5

  adminer:
    build:
      context: ./requirements/Bonus/Adminer
      dockerfile: Dockerfile
    container_name: adminer
    networks:
      - default
    volumes:
      - ~/data/wp:/var/www/html

  static:
    build:
      context: ./requirements/Bonus/static
      dockerfile: Dockerfile
    container_name: static
    networks:
      - default

  # netdata:
  #   build:
  #     context: ./requirements/Bonus/Netdata
  #     dockerfile: Dockerfile


networks:
  default:
    driver: bridge